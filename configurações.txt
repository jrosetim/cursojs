// Beautify
// Dracula Oficial - theme
// ESLint
// JavaScript Snippet Pack
// matreial icon theme
// pomodoro timer
// Rainbow brackets
// Debugger for Chrome para startar pressionar F5
//live server 
//color Highlight
//dotenv
//editorConfig
// vscode-styled-components
// rocketseat

// ctrl + shift + p
// ctrl + p
// ctrl + shift + l - substitui o valor selecionado em todo o codigo
_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-

// Configurando o ambiente
instalar nodeJs e npm

para iniciar um projeto node, entrar na pasta onde quer criar o projeto e pelo prompt rodar o comando
npm init -y

_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-
instalar yarn

curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -

echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list

sudo apt update && sudo apt install yarn

_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-
dentro da pasta do projeto exercutar o comando  > yarn init

instalar o babel pelo terminal usando os comandos 
  yarn add @babel/cli
  yarn add @babel/preset-env
  yarn add @babe/core
  yarn add @babel/plugin-proposal-object-rest-spread

adicionar pasta node_modules no .gitignore

criar arquivo .babelrc e colocar nele as dependencias
{
  "presets": [
    [
      "@babel/preset-env",
      {
        "useBuiltIns": "entry"
      }
    ]
  ],
  "plugins":["@babel/plugin-proposal-object-rest-spread"]
}

no arquivo packge.json adiconar um script no final

  "scripts":{
    "dev": "babel ./main.js -o ./bundle.js -w"
  }

no arquivo index.html ao invez de colocar o arquivo main.js colocar o bundle.js

depois de configurado startar o babel com rodando o comando 'yarn dev' pelo terminal dentro da pasta do projeto.
'yarn dev' refere-se ao script adicionado no arquivo 'package.json'

_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-
Configurando WEBPACH
// OBS -D na frente do comando adiciona a dependencia na tag devDependencies ao inves de adicionar na tag dependecies
yarn add webpack webpack-cli -D

_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-
criar arquivo webpack.config.js inicialmente pode ser configurado assim

module.exports = {
    entry: ['@babel/polyfill', './src/main.js'],
    output: {
        path: __dirname + '/public',
        filename: 'bundle.js'
    },
    devServer: {
        contentBase: __dirname + '/public',
    },
    module: {
        rules: [
            {
                test: /\.js$/,
                exclude: /nome_modules/,
                use: {
                    loader: 'babel-loader'
                }
            }
        ]
    }
}
_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-

yarn add babel-loader -D

yarn add webpack-dev-server -D

yarn add @babel/plugin-transform-async-to-generator -D

yarn add @babel/polyfill -D

alterar o script do package.json para

"dev": "webpack-dev-server --mode-development"

colocar no .babelrc nos plugins
"@babel/plugin-transform-async-to-generator"

yarn add axios



